from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.utils import to_categorical
import numpy as np

# 1. Generate finite dataset
X, y = make_classification(n_samples=100, n_features=5, n_classes=3, n_informative=3, random_state=42)
y_encoded = to_categorical(y)  # one-hot

# 2. Preprocess
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 3. Define model
model = Sequential()
model.add(Dense(10, input_dim=5, activation='relu'))  # hidden layer
model.add(Dense(3, activation='softmax'))             # output layer (3 classes)

# 4. Compile and train
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X_scaled, y_encoded, epochs=100, verbose=0)

# 5. Predict
preds = model.predict(X_scaled)
print("Predicted class indices:", np.argmax(preds, axis=1))
